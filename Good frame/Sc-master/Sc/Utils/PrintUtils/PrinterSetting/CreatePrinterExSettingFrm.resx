<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Create.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAbYAAACaCAYAAADFEG2JAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAADJmlUWHRYTUw6Y29tLmFkb2Jl
        LnhtcAAAAAAAPD94cGFja2V0IGJlZ2luPSLvu78iIGlkPSJXNU0wTXBDZWhpSHpyZVN6TlRjemtjOWQi
        Pz4gPHg6eG1wbWV0YSB4bWxuczp4PSJhZG9iZTpuczptZXRhLyIgeDp4bXB0az0iQWRvYmUgWE1QIENv
        cmUgNS42LWMxMzggNzkuMTU5ODI0LCAyMDE2LzA5LzE0LTAxOjA5OjAxICAgICAgICAiPiA8cmRmOlJE
        RiB4bWxuczpyZGY9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyMiPiA8
        cmRmOkRlc2NyaXB0aW9uIHJkZjphYm91dD0iIiB4bWxuczp4bXA9Imh0dHA6Ly9ucy5hZG9iZS5jb20v
        eGFwLzEuMC8iIHhtbG5zOnhtcE1NPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvbW0vIiB4bWxu
        czpzdFJlZj0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL3NUeXBlL1Jlc291cmNlUmVmIyIgeG1w
        OkNyZWF0b3JUb29sPSJBZG9iZSBQaG90b3Nob3AgQ0MgMjAxNyAoV2luZG93cykiIHhtcE1NOkluc3Rh
        bmNlSUQ9InhtcC5paWQ6RDk1NTc0QUI4QTBCMTFFN0JCMUJDODFDMzUxRDRCOUUiIHhtcE1NOkRvY3Vt
        ZW50SUQ9InhtcC5kaWQ6RDk1NTc0QUM4QTBCMTFFN0JCMUJDODFDMzUxRDRCOUUiPiA8eG1wTU06RGVy
        aXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDpEOTU1NzRBOThBMEIxMUU3QkIxQkM4MUMz
        NTFENEI5RSIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDpEOTU1NzRBQThBMEIxMUU3QkIxQkM4MUMz
        NTFENEI5RSIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFj
        a2V0IGVuZD0iciI/PhD6Z4oAAAg3SURBVHhe7d3RVVNZAIZRSrAESmCtaYASLIESKIEOfPaJElICJVAC
        JViCc84YFEFCkgkm92OzVl5GBBI2+f57uRnPzvZ8++fr94txuxm3u3H77uYxYIABBhg4gIGH8TFux+3z
        nnna/a+NT3Y1bvcH+OLF0CBggAEGGNhk4Ns6cue712qLvzHrOW6zpCB6DBhggAEG/raBL6M/n7bI1dvv
        Mj/QuK0ETdAZYIABBo5sYB7BXb5drg3vsf492vxAf7vMPp/HnAEGGGDgNQM3e8VN1MTcoGGAAQZO2MDt
        TnETNZhPGLMVb8UzwMCjge3iNp7QzsfN6UdwPHkwwAADSzBw/eaRm0v5Ha05WmOAAQYWZuD1C0rGHZkv
        uF5CoX2Nvk8MMMAAA48G5kvRXr4UwClIQTdqGGCAgQUbeHml5Lgztwu+Q5ab5cYAAwx8bAPz2pBfR23r
        F2FD8bFR+P77/jPAwNIN/LqQZITt2tGaUxAMMMAAAws38PDzCklXQsK8cMxLX5m+fkdKDBzOwMWZ05Ci
        JmoMMMBAyMD1DNtl6A5ZPYdbPR5LjyUDDCzRwGqGzWvX4F0iXl8ztwww8CcDD8IGhicHBhhgIGVghm3l
        VKTz6wwwwAADFQMzbHeVO+N++MFkgAEGGBA2pyBSpyA8qXlSY4ABYRM2YWOAAQZSBoQN6BRoa91aZ4AB
        YRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91a
        Z4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRo
        a91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN
        6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZS
        BoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOA
        AQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2
        YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4AB
        YRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91a
        Z4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRo
        a91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN
        6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZS
        BoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOA
        AQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2
        YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4AB
        YRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91a
        Z4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRo
        a91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN
        6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZS
        BoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOAAQZSBoQN6BRoa91aZ4ABYRM2YWOA
        AQZSBoQN6BRoa91aZ4CBGbYVCCAwwAADDFQMzLDdVO6M++EHkwEGGGBghu0aBBAYYIABBiIG7mfYLiN3
        xu+K/L6QAQYYYGB1Nt+EzVJjgAEGGIgYuH4MmwtIrBxLlwEGGCgYOH8M21Wk1IVvivvgyYUBBhjYz8D9
        f1Fbn4r8NML2TdycimCAAQYYWLCBq59hW8fNZf/7LQTLyuPGAAMMHN/Aw29Rc9RmoS14oXlCOf4Tiu+B
        78EpGPj9aO3JKcnPnuBEjgEGGGBgYQbuXhytPf0P/hdbQC8M9CksRV+DIxYGjmdgXh/y40rI197GO8wL
        Se49uQkcAwwwwMACDPz5FOTzyI07cuEqSaAXANpKPt5K9th77E/BwHZRe/L7thm3B09uAscAAwwwcIIG
        dovas9e3OS1pmZ3CMvM1cMgAA9PA/J3aflF7dkGJ17gB5UmFAQYYOLaBeaB1sfFCkV3+cP17t7sTPBw9
        9gPt8/thZ4ABBt7XwGGO0jZcNTn/mZtbgXPOnQEGGGDgnQ3MI7T/f9px26O49csC5gu6v4ybI7n3XSvW
        oMeXAQY+goF5weJq3OY/gL35tWkbYvUvZA5MZ3i6iDoAAAAASUVORK5CYII=
</value>
  </data>
  <data name="PopupBtn_Close.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAEOSURBVEhL7ZVBDoMgFES9/9W0KxuN3VsVIR6BOiYaSgx/oKRuNGnigt/HDDNS2Iue4iKuvcF/
        c/62+svqZVnsq+usUoo+AqP1NmOMCc4ErW6bxlZluf2mcRThep6P9c+6TgdD6Q6W4C4Ua8dhSAdjEkol
        uF7tdde8+150h0p1CO4r7QkodkWBz5TjGBCgR1UdalloFPgM7tobA40GYwBKXZV4H4QgnR04bfU+7NsL
        sJomMUz+gigwguSqldIe2g0N9tMLe6E0FU6BQ5Vhep50xkxPU+BBxfjgs5Xx4dLFQl8STE9d+E+XBKqD
        Gyqmp1CKmXltQJZURxdVGKBSnRua9MnMtYlbcS4nxf+5zOoPBODDnqMkn0kAAAAASUVORK5CYII=
</value>
  </data>
</root>